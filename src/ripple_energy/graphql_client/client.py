# Generated by ariadne-codegen on 2023-09-09 13:53
# Source: src/ripple_energy/graphql

from typing import Optional

from .async_base_client import AsyncBaseClient
from .input_types import TokenAuthenticationInput
from .token_auth import TokenAuth
from .version import Version


def gql(q: str) -> str:
    return q


class Client(AsyncBaseClient):
    async def token_auth(self, input: TokenAuthenticationInput) -> TokenAuthTokenAuth:
        query = gql(
            """
            mutation TokenAuth($input: TokenAuthenticationInput!) {
              tokenAuth(input: $input)
            }
            """
        )
        variables: dict[str, object] = {"input": input}
        response = await self.execute(query=query, variables=variables)
        data = self.get_data(response)
        return TokenAuth.parse_obj(data).token_auth

    async def version(self) -> Optional[str]:
        query = gql(
            """
            query Version {
              version
            }
            """
        )
        variables: dict[str, object] = {}
        response = await self.execute(query=query, variables=variables)
        data = self.get_data(response)
        return Version.parse_obj(data).version
